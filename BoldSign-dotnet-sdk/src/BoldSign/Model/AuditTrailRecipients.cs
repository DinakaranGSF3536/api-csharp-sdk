/* 
 * BoldSign API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace BoldSign.Model
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Runtime.Serialization;
    using System.Text;
    using Newtonsoft.Json;

    /// <summary>
    ///     AuditTrailRecipients
    /// </summary>
    [DataContract]
    public class AuditTrailRecipients
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="AuditTrailRecipients" /> class.
        /// </summary>
        /// <param name="recipientName">recipientName.</param>
        /// <param name="recipientEmail">recipientEmail.</param>
        /// <param name="signerOrder">signerOrder.</param>
        public AuditTrailRecipients(string recipientName = default, string recipientEmail = default, int signerOrder = default)
        {
            this.RecipientName = recipientName;
            this.RecipientEmail = recipientEmail;
            this.RecipientName = recipientName;
            this.RecipientEmail = recipientEmail;
            this.SignerOrder = signerOrder;
        }

        /// <summary>
        ///     Gets or Sets RecipientName
        /// </summary>
        [DataMember(Name = "recipientName", EmitDefaultValue = true)]
        public string RecipientName { get; set; }

        /// <summary>
        ///     Gets or Sets RecipientEmail
        /// </summary>
        [DataMember(Name = "recipientEmail", EmitDefaultValue = true)]
        public string RecipientEmail { get; set; }

        /// <summary>
        ///     Gets or Sets ZOrder
        /// </summary>
        [DataMember(Name = "zOrder", EmitDefaultValue = false)]
        public int SignerOrder { get; set; }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson() => JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}
