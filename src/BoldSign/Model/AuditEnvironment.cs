/* 
 * BoldSign API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace BoldSign.Model
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Runtime.Serialization;
    using System.Text;
    using Newtonsoft.Json;

    /// <summary>
    ///     AuditEnvironment
    /// </summary>
    [DataContract]
    public class AuditEnvironment
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="AuditEnvironment" /> class.
        /// </summary>
        /// <param name="browser">browser.</param>
        /// <param name="platform">platform.</param>
        /// <param name="device">device.</param>
        public AuditEnvironment(string browser = default, string platform = default, string device = default)
        {
            this.Browser = browser;
            this.Platform = platform;
            this.Device = device;
            this.Browser = browser;
            this.Platform = platform;
            this.Device = device;
        }

        /// <summary>
        ///     Gets or Sets Browser.
        /// </summary>
        [DataMember(Name = "browser", EmitDefaultValue = true)]
        public string Browser { get; set; }

        /// <summary>
        ///     Gets or Sets Platform.
        /// </summary>
        [DataMember(Name = "platform", EmitDefaultValue = true)]
        public string Platform { get; set; }

        /// <summary>
        ///     Gets or Sets Device.
        /// </summary>
        [DataMember(Name = "device", EmitDefaultValue = true)]
        public string Device { get; set; }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson() => JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}
